service cloud.firestore {
  
  // Permite leer/escribir si el usuario tiene algún rol (Rowy general)
  match /{allPaths=**} {
    allow read, write: if request.auth.token.roles.size() > 0;
  }

  match /databases/{database}/documents {

    // ----------------------------
    // ⚠️ Rowy rules start (NO MODIFICAR)
    // ----------------------------
    match /{collectionId}/{docId} {
      allow read, create, update, delete: if colRule(["roles"], ["ADMIN","EDITOR","VIEWER","OWNER"]);
      
      function colRule(collections, roles) {
        return collectionId in collections && hasAnyRole(roles);
      }
    }
    // ----------------------------
    // ⚠️ Rowy rules end
    // ----------------------------

    // Permiso global a ADMIN y OWNER
    match /{document=**} {
      allow read, write: if hasAnyRole(["ADMIN", "OWNER"]);
    }

    // Configuración de Rowy (permitido a usuarios con rol)
    match /_rowy_/{docId} {
      allow read: if request.auth.token.roles.size() > 0;
      allow write: if hasAnyRole(["ADMIN", "OWNER"]);

      match /{document=**} {
        allow read: if request.auth.token.roles.size() > 0;
        allow write: if hasAnyRole(["ADMIN", "OWNER"]);
      }

      match /schema/{tableId} {
        allow update: if canModify(tableId,'pc');
        match /{document=**} {
          allow read, write: if canModify(tableId,'pc');
        }
      }

      match /groupSchema/{tableId} {
        allow update: if canModify(tableId,'cg');
        match /{document=**} {
          allow read, write: if canModify(tableId,'cg');
        }
      }
    }

    // Rowy: user management
    match /_rowy_/userManagement/users/{userId} {
      allow get, update, delete: if isDocOwner(userId);
      allow create: if request.auth.token.roles.size() > 0;
    }

    match /_rowy_/publicSettings {
      allow get: if true;
    }

    // ✅ PERMISOS PERSONALIZADOS PARA TUS MEDICIONES

    match /roles/{rol}/parajes/{paraje}/measurements/{docId} {
      allow read: if request.auth != null;
      allow create: if request.auth != null;
      allow update, delete: if 
        hasAnyRole(["ADMIN", "OWNER"]) || 
        request.auth.uid == resource.data.uploader_id;
    }

    match /roles/{rol}/parajes/{paraje}/real_measurements/{docId} {
      allow read: if request.auth != null;
      allow create: if request.auth != null;
      allow update, delete: if 
        hasAnyRole(["ADMIN", "OWNER"]) || 
        request.auth.uid == resource.data.uploader_id;
    }

    // Reglas por defecto: acceso propio
    match /{document=**} {
      allow read, write: if request.auth != null;
      allow create: if request.auth != null;
      allow update, delete: if request.auth.uid == resource.data.userId;
    }

    // 🔧 UTILIDADES
    function isDocOwner(docId) {
      return request.auth != null &&
        (request.auth.uid == resource.id || request.auth.uid == docId);
    }

    function hasAnyRole(roles) {
      return request.auth != null &&
        request.auth.token.roles.hasAny(roles);
    }

    function canModify(tableId, tableType) {
      return hasAnyRole(get(/databases/$(database)/documents/_rowy_/settings)
        .data.tablesSettings[tableType][tableId].modifiableBy);
    }
  }
}
